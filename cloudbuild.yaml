steps:
  # Install dependencies
  - name: "node:16"
    entrypoint: "npm"
    args: ["install"]
    id: "install-deps"

  # Run tests and generate coverage reports
  - name: "node:16"
    entrypoint: "npm"
    args: ["test", "--", "--coverage"]
    id: "run-tests"

  # Build Docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-f",
        "Dockerfile.dev",
        "-t",
        "gcr.io/rich-torus-428117-m8/nextjs-dockerized-template:$COMMIT_SHA",
        ".",
      ]
    id: "build-image"

  # Push Docker image to Google Container Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "gcr.io/rich-torus-428117-m8/nextjs-dockerized-template:$COMMIT_SHA",
      ]
    id: "push-image"
    waitFor: ["build-image"]

  # Deploy to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "run",
        "deploy",
        "nextjs-dockerized-template",
        "--image",
        "gcr.io/rich-torus-428117-m8/nextjs-dockerized-template:$COMMIT_SHA",
        "--region",
        "us-central1",
        "--platform",
        "managed",
      ]
    id: "deploy"
    waitFor: ["push-image"]

  # Run SonarQube analysis
  - name: "node:16"
    entrypoint: "/bin/sh"
    args:
      [
        "-c",
        "curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip && unzip sonar-scanner.zip -d /opt && /opt/sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner -Dsonar.projectKey=lolo-frontend -Dsonar.sources=. -Dsonar.host.url=http://35.193.96.87:9001 -Dsonar.login=sqp_fbf1d71249cd4716699619847b5d5661a0755521 -Dsonar.javascript.lcov.reportPaths=coverage/lcov-report.html -X",
      ]
    id: "sonar-analysis"
    waitFor: ["run-tests"]

  # Install jq and run the quality gate check script
  - name: "node:16"
    entrypoint: "/bin/sh"
    args:
      [
        "-c",
        "apt-get update && apt-get install -y jq && chmod +x check_quality_gate.sh && ./check_quality_gate.sh",
      ]
    id: "check-quality-gate"
    waitFor: ["sonar-analysis"]

# Substitutions for environment variables
substitutions:
  _REGION: us-central1

# Cloud Build options
options:
  logging: CLOUD_LOGGING_ONLY
